##Top includes
[include mainsail.cfg]

# Octopus Pro 1.1 H723
# https://github.com/bigtreetech/BIGTREETECH-OCTOPUS-Pro

#******                                                     ******#
###******                                                 ******###
#####******                                              *****#####
#######*****                                           ******######
#########*****                                       ******########
##########******                                   ******##########
############******                               ******############
##############******                            *****##############
  ##############******                        *****##############  
    ##############******                    ******#############    
      ##############*****#                ******#############      
        ##############*****             ******##############       
          ##############*****         #*****##############         
            #############******      *****##############           
             ##############******  ******#############             
               ##############**********#############               
                 ##############******#############                 
                   #############****#############                  
                     ###########****###########                    
                       #########****#########                      
 ####    ###*  ###   ***************#                              
 ####  ####*   ###   ##*************                               
 #### ###*     ###          ###         ###         ###            
 ######*       ###   ##   ########   #########   ########   ###### 
 ######*       ###   ##   ###   ###  ###    ###  ##    ###  ###    
 #######**     ###   ##   ###    ##  ###    ### ##########  ###    
 ####  ###**   ###   ##   ###   ###  ###    ##   ###        ###    
 ####    ###*  ###   ##   ########   ########     #######   ###    
                          ###        ###                           
                          ###        ###                           

#####################################################################
#   Main Config
#####################################################################
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_0F0022000251313239393734-if00
restart_method: command

[virtual_sdcard]
path: /home/gayfurry/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: corexy        
max_velocity: 700
max_accel: 20000
minimum_cruise_ratio: 0.5
max_z_velocity: 20
max_z_accel: 500
square_corner_velocity: 5.0

[force_move]
enable_force_move: True

[input_shaper]
damping_ratio_x: 0.043 
damping_ratio_y: 0.063 
shaper_type_x = mzv
shaper_freq_x = 66.0 
shaper_type_y = mzv
shaper_freq_y = 46.4

#####################################################################
#   Temp Sensors
#####################################################################
[temperature_sensor octo_mcu_temp]
sensor_type: temperature_mcu
sensor_mcu: mcu

#wip shitty little chamber thermistor, always off by over 10deg atm
[thermistor my_thermistor]
temperature1:25
resistance1:100000
temperature2:50
resistance2:18085.4
temperature3:100
resistance3:5362.6

[temperature_sensor chamber_temp]
sensor_type: my_thermistor
sensor_pin: PF4

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
heater_pin: PA3 
sensor_type: Generic 3950 
sensor_pin: PF3
max_power: 0.75
min_temp: 5
max_temp: 115
control : pid
pid_kp : 73.571
pid_ki : 1.820
pid_kd : 783.849

[verify_heater heater_bed]
max_error: 120 
check_gain_time:40
hysteresis: 5
heating_gain: 2

#####################################################################
#   Toolhead
#####################################################################
[include nitehawk-36.cfg]

# accelerometer specified here, not found in nitehawk config
[adxl345]
cs_pin: nhk:gpio27
spi_software_sclk_pin: nhk:gpio18
spi_software_mosi_pin: nhk:gpio20
spi_software_miso_pin: nhk:gpio19

axes_map: -x,-z,-y

[resonance_tester]
accel_chip: adxl345

probe_points:
    155, 155, 20
    
#####################################################################
#   X/Y Stepper Settings
#####################################################################
[stepper_x]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
rotation_distance: 40
microsteps: 64
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x: virtual_endstop 
position_min: 0

#bedsize x
position_endstop: 345
position_max: 345

# homing x
homing_speed: 80  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PE4
interpolate: true #false if not using tmc tune
run_current: 1.1 # could go up to 1.3, but the steppers get concerningly hot
sense_resistor: 0.110 
#stealthchop_threshold: 0
diag_pin: PG13 
#driver_SGTHRS: 80  # 255 is most sensitive value, 0 is least sensitive - set in tmc autotune config

[stepper_y]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
microsteps: 64
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y: virtual_endstop 
position_min: 0

# bedsize y
position_endstop: 364
position_max: 364

#homing y
homing_speed: 80  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PF2
interpolate: true #false if not using tmc tune
run_current: 1.1 #could go up to 1.3
sense_resistor: 0.110 
#stealthchop_threshold: 0
diag_pin: PG12  
#driver_SGTHRS: 80  # 255 is most sensitive value, 0 is least sensitive - controlled by tmcautotune

#####################################################################
#   Z Stepper Settings
#####################################################################
##  Z0 Stepper - Front Left
##  Connected to Driver0
[stepper_z]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
gear_ratio: 80:12
microsteps: 64
endstop_pin: probe:z_virtual_endstop
position_max: 310
position_min: -5
homing_speed: 10
second_homing_speed: 5
homing_retract_dist: 5

[tmc2209 stepper_z]
uart_pin: PC4
interpolate: true #false if not using tmc tune
run_current: 0.55 
sense_resistor: 0.110 
#stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to Driver2
[stepper_z1]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:12
microsteps: 64

[tmc2209 stepper_z1]
uart_pin: PC6
interpolate: true #false if not using tmc tune
run_current: 0.55
sense_resistor: 0.110 
#stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to Driver 3
[stepper_z2]
step_pin: PG4 
dir_pin: !PC1 
enable_pin: !PA2
rotation_distance: 40
gear_ratio: 80:12
microsteps: 64

[tmc2209 stepper_z2]
uart_pin: PC7
interpolate: true #false if not using tmc tune
run_current: 0.55
sense_resistor: 0.110 
#stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to Driver 1
[stepper_z3]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
gear_ratio: 80:12
microsteps: 64

[tmc2209 stepper_z3]
uart_pin: PD11
interpolate: true #false if not using tmc tune
run_current: 0.55
sense_resistor: 0.110 
#stealthchop_threshold: 0

#####################################################################
#   Extra Fans + Misc
#####################################################################
[controller_fan MCU_fan]
pin: PA8
max_power: 1
kick_start_time: 1
fan_speed: 0.6
idle_timeout: 1200
heater: extruder, heater_bed
stepper: stepper_x, stepper_y

[fan_generic Filter_Fan]
pin: PD15
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.010
kick_start_time: 1.0

[led main_led]
white_pin:PE5
cycle_time: 0.010
hardware_pwm: False
initial_WHITE: 0.5

#####################################################################
#   Eddy
#####################################################################
[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_504450613051A31C-if00  
restart_method: command

[probe_eddy_ng btt_eddy]
sensor_type: btt_eddy
i2c_mcu: eddy
i2c_bus: i2c0f

#xol toolhead specific offset
x_offset: 0
y_offset: 24

#eddy ng
tap_target_z: -0.3

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100

[temperature_sensor btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26

[bed_mesh]
horizontal_move_z: 2.0 
speed: 150

# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.

mesh_min: 20, 25 
mesh_max: 325, 325 # was 325, 300 
probe_count: 15, 15
algorithm: bicubic
scan_overshoot: 8

# Eddy as the probe AND the homing endstop
[safe_z_home]
home_xy_position: 172.5, 175
z_hop: 10
z_hop_speed: 25
speed: 200

#####################################################################
#  Extruder temp tolerance override
#####################################################################
[gcode_macro M109] # Wait Hotend Temp
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-5} MAXIMUM={s+5}   # Wait for hotend temp (within n degrees)
    {% endif %}
                          
#                     ......                      
#                     %%%%%%                      
#           ....    ..%%%%%%..    ....            
#         ..%%%%...:%%%%%%%%%%:...%%%%..          
#         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%          
#         .:%%%%%%%%%%%%%%%%%%%%%%%%%%:.          
#           .%%%%%%%%%%-..-%%%%%%%%%%.            
#          .%%%%%%%% .      . %%%%%%%%.           
#          -%%%%%%..          ..%%%%%%-           
#     .%%%%%%%%%%#              #%%%%%%%%%%.      
#     .%%%%%%%%%%.              .%%%%%%%%%%.      
#     .%%%%%%%%%%*              *%%%%%%%%%%.      
#          -%%%%%%..          ..%%%%%%-           
#          .%%%%%%%% .      . %%%%%%%%.           
#           .%%%%%%%%%%:..:%%%%%%%%%%.            
#         .:%%%%%%%%%%%%%%%%%%%%%%%%%%:.          
#         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%          
#         ..%%%%...:%%%%%%%%%%:...%%%%..          
#           ..:.    ..%%%%%%..    ....            
#                     %%%%%%                       
#  ____                           _   __  __                          
# / ___| ___ _ __   ___ _ __ __ _| | |  \/  | __ _  ___ _ __ ___  ___ 
#| |  _ / _ \ '_ \ / _ \ '__/ _` | | | |\/| |/ _` |/ __| '__/ _ \/ __|
#| |_| |  __/ | | |  __/ | | (_| | | | |  | | (_| | (__| | | (_) \__ \
# \____|\___|_| |_|\___|_|  \__,_|_| |_|  |_|\__,_|\___|_|  \___/|___/

#####################################################################
#------------------------ Quad Gantry Level-------------------------#
#####################################################################
[quad_gantry_level]          
gantry_corners:              
	-60, -10 # was -85,-25
	410, 420 # was 385,390
points:
	20, 5 # was 10,10
	20, 300 # was 10,300
	325, 300 # was 295,300
	325, 5 # was 295,10
speed: 400                   
horizontal_move_z: 3.0      
retry_tolerance: 0.01      
retries: 5                  
max_adjust: 4

#####################################################################
#------------------------- Filament related-------------------------#
#####################################################################
[gcode_macro CLEAN_NOZZLE]
gcode:
   SAVE_GCODE_STATE NAME=clean_nozzle_gantry
   {% set extruder_temp = 150 %}
    {% set current_target_temp  = printer.extruder.target|int %}
        G90
        G1 X90 F9000
        G1 Y358 F9000
        {% if printer.print_stats.state != "paused" %}
            M104 S{extruder_temp}
            M117 Nozzle heating...
            {action_respond_info("Nozzle not hot enough!")}
            {action_respond_info("Nozzle heating...")}
            M109 S{extruder_temp}
        {% else %}
            {% if printer.extruder.target == 0 %}
                M104 S{extruder_temp}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_temp}
            {% else %}
                M104 S{printer.extruder.target}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{printer.extruder.target}
            {% endif %}
        {% endif %}
        G1 X56 F18000
        G1 X90 F18000
        G1 X56 F18000
        G1 X90 F18000
        G1 X56 F18000
        G1 X90 F18000
        M400
        {% if current_target_temp == 0 or printer.print_stats.state != "paused"%}
            M104 S0
        {% endif %}
    
   RESTORE_GCODE_STATE NAME=clean_nozzle_gantry

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set extruder_temp = 250 %}
    {% set current_target_temp  = printer.extruder.target|int %}

    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" %}
            M104 S{extruder_temp}
            M117 Nozzle heating...
            {action_respond_info("Nozzle not hot enough!")}
            {action_respond_info("Nozzle heating...")}
            M109 S{extruder_temp}
        {% else %}
            {% if printer.extruder.target == 0 %}
                M104 S{extruder_temp}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_temp}
            {% else %}
                M104 S{printer.extruder.target}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{printer.extruder.target}
            {% endif %}
        {% endif %}
        M117 Extruding...
        G91 
        G1 E75 F500
        G1 E30 F200
        G1 E-2 F300
        G90
        M400
        M117 Filament loaded.
        M400
        {% if current_target_temp == 0 or printer.print_stats.state != "paused"%}
            M104 S0
        {% endif %}
        CLEAN_NOZZLE
    {% else %}
        {action_respond_info("Don't load filament during printing!!!")}
    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  80
variable_purge_distance:  25
variable_speed: 200
variable_max_velocity: 800
gcode:
    {% set extruder_temp = 250 %}
    {% set current_target_temp  = printer.extruder.target|int %}

    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" %}
            M104 S{extruder_temp}
            M117 Nozzle heating...
            {action_respond_info("Nozzle not hot enough!")}
            {action_respond_info("Nozzle heating...")}
            M109 S{extruder_temp}
        {% else %}
            {% if printer.extruder.target == 0 %}
                M104 S{extruder_temp}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_temp}
            {% else %}
                M104 S{printer.extruder.target}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{printer.extruder.target}
            {% endif %}
        {% endif %}
        M117 Retracting...
        G91
        G1 E{purge_distance} F{speed}             # Purge
        G1 E-{unload_distance} F{max_velocity}    # Fast-unload
        G90
        M400
        M117 Filament ejected.
        M400
        {% if current_target_temp == 0 or printer.print_stats.state != "paused"%}
            M104 S0
        {% endif %}
        CLEAN_NOZZLE
    {% else %}
        {action_respond_info("Don't unload filament during printing!!!")}
    {% endif %}

#####################################################################
#------------------------- Start_print macro -----------------------#
#####################################################################
[gcode_macro START_PRINT]
gcode:
    # This part fetches data from your slicer, such as bed temp, extruder temp, chamber temp, and the size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

    # Homes the printer, sets absolute positioning.
    # Check homing status and home if needed
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                                                      # Full home if not already homed
    {% endif %}
                
    G90                                                          # Use absolute/relative coordinates
    M400                                                         # Wait for current moves to finish
    CLEAR_PAUSE                                                  # Clear any existing pause state

    # Uncomment for bed mesh (1 of 2)
    BED_MESH_CLEAR                                               # Clears old saved bed mesh (if any)

    # Checks if the bed temp is higher than 90C - if so, then trigger a heat soak.
    {% if params.BED|int > 90 %}
        M117 Bed: {target_bed}C                                  # Display bed temperature
        M106 S255                                                # Turns on the PT-fan
        G1 X{x_wait} Y{y_wait} Z15 F9000                         # Go to the center of the bed
        M190 S{target_bed}                                       # Sets the target temp for the bed
        
        # Start chamber heating progress monitoring (modify just this section)
        M117 Monitoring chamber: {target_chamber}C                # Display chamber monitoring status
        # Conditional check for chamber thermistor
        {% if printer["temperature_sensor chamber"] is defined %}
            TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for the chamber to reach the desired temp
        {% else %}
            #M117 Soak: 5min (No chamber thermistor)
            #G4 P300000                                           # Wait 5 minutes for heatsoak
        {% endif %}

    # If the bed temp is not over 90c, then handle soak based on material
    {% else %}
        M117 Bed: {target_bed}C                                  # Display bed temperature
        G1 X{x_wait} Y{y_wait} Z15 F9000                         # Go to center of the bed
        M190 S{target_bed}                                       # Sets the target temp for the bed
        
        # Material-based soak times with variant handling
        {% set raw_material = params.MATERIAL|default("PLA")|string|upper %}
        
        # Extract base material type by handling variants
        {% set material = namespace(type="") %}
        {% if "PLA" in raw_material %}
            {% set material.type = "PLA" %}
        {% elif "PETG" in raw_material %}
            {% set material.type = "PETG" %}
        {% elif "TPU" in raw_material or "TPE" in raw_material %}
            {% set material.type = "TPU" %}
        {% elif "PVA" in raw_material %}
            {% set material.type = "PVA" %}
        {% elif "HIPS" in raw_material %}
            {% set material.type = "HIPS" %}
        {% else %}
            {% set material.type = raw_material %}
        {% endif %}

        # Define soak times
        {% set soak_time = {
            "PLA": 1, # was 180000,    # 3 minutes - Standard PLA soak time
            "PETG": 1, # 240000,   # 4 minutes - PETG needs slightly longer to stabilize
            "TPU": 1, # 180000,    # 3 minutes - TPU/TPE materials
            "PVA": 180000,    # 3 minutes - Support material, similar to PLA
            "HIPS": 240000    # 4 minutes - When used as support/primary under 90C
        }[material.type]|default(180000) %}                      # Default to 5 minutes if material not found was 300000
        
        # M117 Soak: {soak_time/60000|int}min ({raw_material})     # Display soak time and material
        # G4 P{soak_time}                                          # Execute soak timer
    {% endif %}
    
    # Check if GANTRY_LEVELING macro exists, use it if available
    {% if printer.configfile.config['gcode_macro GANTRY_LEVELING'] is defined %}
        M117 Gantry Leveling...                                 # Display gantry leveling status
        GANTRY_LEVELING                                         # Performs the appropriate leveling method (QGL or Z_TILT)
    {% else %}
        # Fallback to traditional method if GANTRY_LEVELING doesn't exist
        # Conditional method for Z_TILT_ADJUST and QUAD_GANTRY_LEVEL
        {% if 'z_tilt' in printer %}
            #STATUS_LEVELING                                  # Sets SB-LEDs to leveling-mode
            M117 Z-tilt...                                    # Display Z-tilt adjustment
            Z_TILT_ADJUST                                     # Levels the buildplate via z_tilt_adjust
        {% elif 'quad_gantry_level' in printer %}
            #STATUS_LEVELING                                  # Sets SB-LEDs to leveling-mode
            M117 QGL...                                       # Display QGL status
            QUAD_GANTRY_LEVEL                                 # Levels the gantry
        {% endif %}
    {% endif %}
    # Conditional check to ensure Z is homed after leveling procedures
    {% if 'z' not in printer.toolhead.homed_axes %}
        M117 Z homing                                         # Display Z homing status
        G28                                                 # Home if needed after leveling
    {% endif %}

    # Heating the nozzle to 150C. This helps with getting a correct Z-home
    M117 Hotend: 150C                                           # Display hotend temperature
    M109 S150                                                   # Heats the nozzle to 150C

    M117 Cleaning the nozzle...
    #STATUS_CLEANING                                             # Sets SB-LEDs to cleaning-mode
    CLEAN_NOZZLE                                                 # Clean nozzle before printing

    M117 Nozzle to 150C...                                      # Display wait message
    M109 S150                                                   # Heats the nozzle to 150C                                                  # Wait 1 min to stablize and cooldown the nozzle

    #STATUS_CALIBRATING_Z                                        # Sets SB-LEDs to z-calibration-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000  
    M117 Tappy Tap...                                           # Display tappy tap message
    PROBE_EDDY_NG_TAP                                           # See: https://hackmd.io/yEF4CEntSHiFTj230CdD0Q

    # Uncomment for bed mesh (2 of 2)
    M117 Bed mesh                                               # Display bed mesh status
    BED_MESH_CALIBRATE ADAPTIVE=1 Method=rapid_scan             # Starts bed mesh  Uncomment Method=rapid_scan for eddy rapid bed meshing

    M400                                                        # Wait for current moves to finish
    G1 X{x_wait} Y{y_wait} Z15 F9000  
    
    # Heats up the nozzle to target via data from the slicer
    M117 Hotend: {target_extruder}C                             # Display target hotend temperature
    M107                                                        # Turns off part cooling fan
    M109 S{target_extruder}                                     # Heats the nozzle to printing temp
    
    # Gets ready to print by doing a purge line and updating the SB-LEDs
    #M117 The purge...                                           # Display purge status
    
    M117 Printer goes brrr                                      # Display print starting
    
#####################################################################
#------------------------- End Print macro -------------------------#
#####################################################################

[gcode_macro END_PRINT]
gcode:
	# Get Boundaries
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
	
	# Set safety margins (5% from edges)
	{% set x_margin = max_x * 0.05 %}
	{% set y_margin = max_y * 0.05 %}
	
	# Calculate safe parking positions
	{% set safe_x = x_margin %}               # 5% from X=0
	{% set safe_y = max_y - y_margin %}       # 5% from max Y
	
	# Check end position to determine safe directions to move
	{% if printer.toolhead.position.x < (max_x - 20) %}
		{% set x_safe = 20.0 %}
	{% else %}
		{% set x_safe = -20.0 %}
	{% endif %}

	{% if printer.toolhead.position.y < (max_y - 20) %}
		{% set y_safe = 20.0 %}
	{% else %}
		{% set y_safe = -20.0 %}
	{% endif %}

	{% if printer.toolhead.position.z < (max_z - 2) %}
		{% set z_safe = 2.0 %}
	{% else %}
		{% set z_safe = max_z - printer.toolhead.position.z %}
	{% endif %}

	# Commence END_PRINT
	M400                                                          # wait for buffer to clear
	G92 E0                                                        # zero the extruder
	G1 E-3.0 F1800                                               # retract
	G91                                                          # relative positioning
	G0 Z{z_safe} F3600                                           # move nozzle up
	M104 S0                                                      # turn off hotend
	M140 S0                                                      # turn off bed
	M106 S0                                                      # turn off fan
	M107                                                         # turn off part cooling fan
	G90                                                          # absolute positioning
	G1 X{safe_x} Y{safe_y} F2000                                 # move to safe front position

	# Safe Z-drop if near maximum height (after parking)
	{% if printer.toolhead.position.z > (max_z - 20) %}
		G91                                                        # relative positioning
		G1 Z-10 F600                                               # drop 10mm if near the top
		G90                                                        # back to absolute
	{% endif %}

	M117 Print finished!!  
	PROBE_EDGY_NG_SET_TAP_OFFSET VALUE=0
	UPDATE_DELAYED_GCODE ID=turn_off_fans DURATION=300   
	UPDATE_DELAYED_GCODE ID=reset_printer_status DURATION=325    # Schedule reset status
	
	# M84                                                        # Disable motors (currently disabled to allow idle timeout)F

[delayed_gcode reset_printer_status]
gcode:
    SDCARD_RESET_FILE

[delayed_gcode turn_off_fans]
gcode:
    {% if not printer.idle_timeout.state == "Printing" %}
          M107          # Only turn off if not printing
    {% endif %}

[delayed_gcode set_ready_status]
gcode:
  STATUS_READY

#todo prolly delete this

#[verify_heater extruder]
#max_error: 320
#check_gain_time:20
#hysteresis: 5
#heating_gain: 2
  
#Bottom includes
[include tmctune.cfg]
[shaketune]

#####################################################################
#--------------------- Auto generated configs ----------------------#
#####################################################################

# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.057973, 0.059019, 0.056633, 0.063926, 0.048422, 0.051562, 0.054843, 0.049469, 0.051561, 0.046626, 0.059463, 0.057229, 0.058274, 0.064666, 0.068971
#*# 	  0.052753, 0.054096, 0.045577, 0.049467, 0.043029, 0.042127, 0.042127, 0.044077, 0.037770, 0.045576, 0.051409, 0.053799, 0.055134, 0.066004, 0.068526
#*# 	  0.064668, 0.063619, 0.057973, 0.056633, 0.052010, 0.051562, 0.055290, 0.050964, 0.046023, 0.047972, 0.054099, 0.047674, 0.061547, 0.063628, 0.078288
#*# 	  0.049912, 0.049170, 0.043029, 0.043927, 0.042127, 0.041827, 0.037469, 0.038670, 0.038519, 0.039274, 0.048421, 0.046774, 0.056931, 0.066745, 0.072378
#*# 	  0.044215, 0.041827, 0.035214, 0.034309, 0.033555, 0.030390, 0.030390, 0.026160, 0.021469, 0.035665, 0.036416, 0.035660, 0.047072, 0.049917, 0.067043
#*# 	  0.037470, 0.038222, 0.030390, 0.029333, 0.025102, 0.027970, 0.024649, 0.017223, 0.014338, 0.029182, 0.029936, 0.029182, 0.046026, 0.047374, 0.069565
#*# 	  0.047074, 0.048422, 0.042575, 0.034912, 0.037018, 0.029785, 0.027821, 0.012056, 0.011600, 0.018285, 0.032951, 0.032800, 0.035655, 0.048119, 0.057378
#*# 	  0.042575, 0.046626, 0.041375, 0.032501, 0.029936, 0.029332, 0.023286, 0.014641, 0.014945, 0.020709, 0.028276, 0.028579, 0.037318, 0.045276, 0.058574
#*# 	  0.054399, 0.059015, 0.046626, 0.044676, 0.034309, 0.030841, 0.026765, 0.017830, 0.014945, 0.021471, 0.026766, 0.025707, 0.037169, 0.045877, 0.056488
#*# 	  0.058121, 0.055589, 0.052005, 0.042126, 0.034008, 0.033255, 0.031898, 0.027218, 0.027824, 0.033554, 0.032649, 0.036719, 0.046026, 0.058721, 0.074147
#*# 	  0.060359, 0.059463, 0.054395, 0.054845, 0.048568, 0.043178, 0.037169, 0.035358, 0.030692, 0.031748, 0.032200, 0.042875, 0.053800, 0.065408, 0.081389
#*# 	  0.057079, 0.056634, 0.052010, 0.052005, 0.046326, 0.042127, 0.038672, 0.033554, 0.030390, 0.040927, 0.038222, 0.041827, 0.059162, 0.066007, 0.076369
#*# 	  0.060359, 0.063926, 0.054997, 0.054845, 0.056786, 0.043927, 0.038222, 0.030692, 0.029635, 0.035663, 0.039575, 0.044527, 0.052309, 0.069264, 0.080793
#*# 	  0.068967, 0.067484, 0.053799, 0.057676, 0.053352, 0.046474, 0.041076, 0.032803, 0.033255, 0.036719, 0.044676, 0.046774, 0.064965, 0.076960, 0.087419
#*# 	  0.062886, 0.064365, 0.053352, 0.050664, 0.044528, 0.043778, 0.036417, 0.028276, 0.025255, 0.033856, 0.035665, 0.038220, 0.053352, 0.064224, 0.081533
#*# x_count = 15
#*# y_count = 15
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 324.92
#*# min_y = 25.0
#*# max_y = 324.88000000000017
#*#
#*# [probe_eddy_ng btt_eddy]
#*# calibrated_drive_currents = 16, 17
#*# calibration_version = 5
#*# reg_drive_current = 16
#*# tap_drive_current = 17
#*# calibration_16 = gASVygMAAAAAAAB9lCiMAXaUSwWMBGZ0b2iUjBtudW1weS5wb2x5bm9taWFsLnBvbHlub21pYWyUjApQb2x5bm9taWFslJOUKYGUfZQojARjb2VmlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCoWUaAyMBWR0eXBllJOUjAJmOJSJiIeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiiUNQ05MFqQJz9T8UwZ82H/v8P0NF8+pSyug/D5hc8E6u2D9TrMqYnkDGP8VXL2gQdsc/Mfe0Y5w/wD9GD/UNYjSxP17B1HpBd7U/1vfVnOPiqD+UdJRijAZkb21haW6UaAtoDksAhZRoEIeUUpQoSwFLAoWUaBiJQxBB0Fw0uoGUPpD87Bxq8pQ+lHSUYowGd2luZG93lGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQAAAAAAAA8L8AAAAAAADwP5R0lGKMB19zeW1ib2yUjAF4lIwGc3ltYm9slGgsdWKMCWZ0b2hfaGlnaJRoBSmBlH2UKGgIaAtoDksAhZRoEIeUUpQoSwFLCoWUaBiJQ1Aprk56L40aQBi5mmhmDQlAxHaN3ima+j/R3Za3nV/yPwxwqMyHlOc/mXw9WmDz3z8DHHBsq8GrP0sHTtUlssq/bOWriz9z5j+3W917lwXnP5R0lGJoHWgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQtCpeKu7ulD58GJYm/gWVPpR0lGJoJGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQAAAAAAAA8L8AAAAAAADwP5R0lGJoK2gsaC1oLHVijARodG9mlGgFKYGUfZQoaAhoC2gOSwCFlGgQh5RSlChLAUsKhZRoGIlDUAoTPj0V1pQ+Wq6FyjkdJz6/EmGRGjQZvt+qjPAg2/89cSSsTpDW672vX82GpGH9PTS1SGESSN+9EzQyxOIo970rFbUnPuLkPeFytmrdRsI9lHSUYmgdaAtoDksAhZRoEIeUUpQoSwFLAoWUaBiJQxCICv6Y3JFwP+YhBT0G+hNAlHSUYmgkaAtoDksAhZRoEIeUUpQoSwFLAoWUaBiJQxAAAAAAAADwvwAAAAAAAPA/lHSUYmgraCxoLWgsdWKMB2hfcmFuZ2WUXZQoRz9wkdyY/gqIR0At/2idQMfPZYwHZl9yYW5nZZRdlChHQUhaku7ZUABHQUj3pv2TqABljAJkY5RLEHUu
#*# calibration_17 = gASV6QIAAAAAAAB9lCiMAXaUSwWMBGZ0b2iUjBtudW1weS5wb2x5bm9taWFsLnBvbHlub21pYWyUjApQb2x5bm9taWFslJOUKYGUfZQojARjb2VmlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCoWUaAyMBWR0eXBllJOUjAJmOJSJiIeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiiUNQ725mvNG+7j+fRTav+MrzP4jKbfyiBtg/NzdtvguZxD8i8OoG4qvFP2OUzHhsREy/DZQ5rXcWw7/Ws99RJSWlP65/GOuYnbM/F3mXlCRzfL+UdJRijAZkb21haW6UaAtoDksAhZRoEIeUUpQoSwFLAoWUaBiJQxAOe7liX5WUPrqZfQjS+5Q+lHSUYowGd2luZG93lGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQAAAAAAAA8L8AAAAAAADwP5R0lGKMB19zeW1ib2yUjAF4lIwGc3ltYm9slGgsdWKMCWZ0b2hfaGlnaJROjARodG9mlGgFKYGUfZQoaAhoC2gOSwCFlGgQh5RSlChLAUsKhZRoGIlDUPf/olMI2pQ+gVUkJHNaJz6/JVD6KicRvk0Q4dBF1fM9bERoR0Z94j3m+Gx3Es7nvZB/HLG97/q9JfeecHbh/T0i4Xn9o5DwPXsplHWZrvO9lHSUYmgdaAtoDksAhZRoEIeUUpQoSwFLAoWUaBiJQxAAR4Y6iFIzP8zMghR28AZAlHSUYmgkaAtoDksAhZRoEIeUUpQoSwFLAoWUaBiJQxAAAAAAAADwvwAAAAAAAPA/lHSUYmgraCxoLWgsdWKMB2hfcmFuZ2WUXZQoRz8zUog6hkcAR0AG8HYUgszMZYwHZl9yYW5nZZRdlChHQUhmYUpzgABHQUjf0q+k4ABljAJkY5RLEXUu
